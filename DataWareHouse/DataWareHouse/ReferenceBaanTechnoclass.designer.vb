'------------------------------------------------------------------------------
' <auto-generated>
'     Ce code a été généré par un outil.
'     Version du runtime :4.0.30319.18444
'
'     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
'     le code est régénéré.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="DW")>  _
Partial Public Class ReferenceBaanTechnoclassDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Définitions de méthodes d'extensibilité"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertT_ARTICLE_ART(instance As T_ARTICLE_ART)
    End Sub
  Partial Private Sub UpdateT_ARTICLE_ART(instance As T_ARTICLE_ART)
    End Sub
  Partial Private Sub DeleteT_ARTICLE_ART(instance As T_ARTICLE_ART)
    End Sub
  Partial Private Sub InsertT_ARTICLE_STANDARD_AST(instance As T_ARTICLE_STANDARD_AST)
    End Sub
  Partial Private Sub UpdateT_ARTICLE_STANDARD_AST(instance As T_ARTICLE_STANDARD_AST)
    End Sub
  Partial Private Sub DeleteT_ARTICLE_STANDARD_AST(instance As T_ARTICLE_STANDARD_AST)
    End Sub
  Partial Private Sub InsertT_J_ART_ARP_JAA(instance As T_J_ART_ARP_JAA)
    End Sub
  Partial Private Sub UpdateT_J_ART_ARP_JAA(instance As T_J_ART_ARP_JAA)
    End Sub
  Partial Private Sub DeleteT_J_ART_ARP_JAA(instance As T_J_ART_ARP_JAA)
    End Sub
  Partial Private Sub InsertT_ARTICLE_ARP(instance As T_ARTICLE_ARP)
    End Sub
  Partial Private Sub UpdateT_ARTICLE_ARP(instance As T_ARTICLE_ARP)
    End Sub
  Partial Private Sub DeleteT_ARTICLE_ARP(instance As T_ARTICLE_ARP)
    End Sub
  Partial Private Sub InsertT_STATUT_JAA_JST(instance As T_STATUT_JAA_JST)
    End Sub
  Partial Private Sub UpdateT_STATUT_JAA_JST(instance As T_STATUT_JAA_JST)
    End Sub
  Partial Private Sub DeleteT_STATUT_JAA_JST(instance As T_STATUT_JAA_JST)
    End Sub
  Partial Private Sub InsertT_SOURCE_JAA_JSR(instance As T_SOURCE_JAA_JSR)
    End Sub
  Partial Private Sub UpdateT_SOURCE_JAA_JSR(instance As T_SOURCE_JAA_JSR)
    End Sub
  Partial Private Sub DeleteT_SOURCE_JAA_JSR(instance As T_SOURCE_JAA_JSR)
    End Sub
  Partial Private Sub InsertT_TYPE_ARTICLE_TAP(instance As T_TYPE_ARTICLE_TAP)
    End Sub
  Partial Private Sub UpdateT_TYPE_ARTICLE_TAP(instance As T_TYPE_ARTICLE_TAP)
    End Sub
  Partial Private Sub DeleteT_TYPE_ARTICLE_TAP(instance As T_TYPE_ARTICLE_TAP)
    End Sub
  Partial Private Sub InsertT_REFERENCES_FOB_RFO(instance As T_REFERENCES_FOB_RFO)
    End Sub
  Partial Private Sub UpdateT_REFERENCES_FOB_RFO(instance As T_REFERENCES_FOB_RFO)
    End Sub
  Partial Private Sub DeleteT_REFERENCES_FOB_RFO(instance As T_REFERENCES_FOB_RFO)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.DataWareHouse.My.MySettings.Default.DWConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property T_ARTICLE_ART() As System.Data.Linq.Table(Of T_ARTICLE_ART)
		Get
			Return Me.GetTable(Of T_ARTICLE_ART)
		End Get
	End Property
	
	Public ReadOnly Property T_ARTICLE_STANDARD_AST() As System.Data.Linq.Table(Of T_ARTICLE_STANDARD_AST)
		Get
			Return Me.GetTable(Of T_ARTICLE_STANDARD_AST)
		End Get
	End Property
	
	Public ReadOnly Property T_J_ART_ARP_JAA() As System.Data.Linq.Table(Of T_J_ART_ARP_JAA)
		Get
			Return Me.GetTable(Of T_J_ART_ARP_JAA)
		End Get
	End Property
	
	Public ReadOnly Property T_ARTICLE_ARP() As System.Data.Linq.Table(Of T_ARTICLE_ARP)
		Get
			Return Me.GetTable(Of T_ARTICLE_ARP)
		End Get
	End Property
	
	Public ReadOnly Property T_STATUT_JAA_JST() As System.Data.Linq.Table(Of T_STATUT_JAA_JST)
		Get
			Return Me.GetTable(Of T_STATUT_JAA_JST)
		End Get
	End Property
	
	Public ReadOnly Property T_SOURCE_JAA_JSR() As System.Data.Linq.Table(Of T_SOURCE_JAA_JSR)
		Get
			Return Me.GetTable(Of T_SOURCE_JAA_JSR)
		End Get
	End Property
	
	Public ReadOnly Property T_TYPE_ARTICLE_TAP() As System.Data.Linq.Table(Of T_TYPE_ARTICLE_TAP)
		Get
			Return Me.GetTable(Of T_TYPE_ARTICLE_TAP)
		End Get
	End Property
	
	Public ReadOnly Property T_REFERENCES_FOB_RFO() As System.Data.Linq.Table(Of T_REFERENCES_FOB_RFO)
		Get
			Return Me.GetTable(Of T_REFERENCES_FOB_RFO)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="PRODUCTION.T_ARTICLE_ART")>  _
Partial Public Class T_ARTICLE_ART
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ART_ID As Integer
	
	Private _ART_REFERENCE As String
	
	Private _ART_LIBELLE As String
	
	Private _ART_POIDS As Single
	
	Private _T_ARTICLE_STANDARD_AST As EntityRef(Of T_ARTICLE_STANDARD_AST)
	
	Private _T_J_ART_ARP_JAA As EntitySet(Of T_J_ART_ARP_JAA)
	
	Private _T_REFERENCES_FOB_RFO As EntitySet(Of T_REFERENCES_FOB_RFO)
	
    #Region "Définitions de méthodes d'extensibilité"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnART_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnART_IDChanged()
    End Sub
    Partial Private Sub OnART_REFERENCEChanging(value As String)
    End Sub
    Partial Private Sub OnART_REFERENCEChanged()
    End Sub
    Partial Private Sub OnART_LIBELLEChanging(value As String)
    End Sub
    Partial Private Sub OnART_LIBELLEChanged()
    End Sub
    Partial Private Sub OnART_POIDSChanging(value As Single)
    End Sub
    Partial Private Sub OnART_POIDSChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._T_ARTICLE_STANDARD_AST = CType(Nothing, EntityRef(Of T_ARTICLE_STANDARD_AST))
		Me._T_J_ART_ARP_JAA = New EntitySet(Of T_J_ART_ARP_JAA)(AddressOf Me.attach_T_J_ART_ARP_JAA, AddressOf Me.detach_T_J_ART_ARP_JAA)
		Me._T_REFERENCES_FOB_RFO = New EntitySet(Of T_REFERENCES_FOB_RFO)(AddressOf Me.attach_T_REFERENCES_FOB_RFO, AddressOf Me.detach_T_REFERENCES_FOB_RFO)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ART_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ART_ID() As Integer
		Get
			Return Me._ART_ID
		End Get
		Set
			If ((Me._ART_ID = value)  _
						= false) Then
				Me.OnART_IDChanging(value)
				Me.SendPropertyChanging
				Me._ART_ID = value
				Me.SendPropertyChanged("ART_ID")
				Me.OnART_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ART_REFERENCE", DbType:="VarChar(16) NOT NULL", CanBeNull:=false)>  _
	Public Property ART_REFERENCE() As String
		Get
			Return Me._ART_REFERENCE
		End Get
		Set
			If (String.Equals(Me._ART_REFERENCE, value) = false) Then
				Me.OnART_REFERENCEChanging(value)
				Me.SendPropertyChanging
				Me._ART_REFERENCE = value
				Me.SendPropertyChanged("ART_REFERENCE")
				Me.OnART_REFERENCEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ART_LIBELLE", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property ART_LIBELLE() As String
		Get
			Return Me._ART_LIBELLE
		End Get
		Set
			If (String.Equals(Me._ART_LIBELLE, value) = false) Then
				Me.OnART_LIBELLEChanging(value)
				Me.SendPropertyChanging
				Me._ART_LIBELLE = value
				Me.SendPropertyChanged("ART_LIBELLE")
				Me.OnART_LIBELLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ART_POIDS", DbType:="Real NOT NULL")>  _
	Public Property ART_POIDS() As Single
		Get
			Return Me._ART_POIDS
		End Get
		Set
			If ((Me._ART_POIDS = value)  _
						= false) Then
				Me.OnART_POIDSChanging(value)
				Me.SendPropertyChanging
				Me._ART_POIDS = value
				Me.SendPropertyChanged("ART_POIDS")
				Me.OnART_POIDSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="T_ARTICLE_ART_T_ARTICLE_STANDARD_AST", Storage:="_T_ARTICLE_STANDARD_AST", ThisKey:="ART_ID", OtherKey:="ART_ID", IsUnique:=true, IsForeignKey:=false)>  _
	Public Property T_ARTICLE_STANDARD_AST() As T_ARTICLE_STANDARD_AST
		Get
			Return Me._T_ARTICLE_STANDARD_AST.Entity
		End Get
		Set
			Dim previousValue As T_ARTICLE_STANDARD_AST = Me._T_ARTICLE_STANDARD_AST.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._T_ARTICLE_STANDARD_AST.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._T_ARTICLE_STANDARD_AST.Entity = Nothing
					previousValue.T_ARTICLE_ART = Nothing
				End If
				Me._T_ARTICLE_STANDARD_AST.Entity = value
				If (Object.Equals(value, Nothing) = false) Then
					value.T_ARTICLE_ART = Me
				End If
				Me.SendPropertyChanged("T_ARTICLE_STANDARD_AST")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="T_ARTICLE_ART_T_J_ART_ARP_JAA", Storage:="_T_J_ART_ARP_JAA", ThisKey:="ART_ID", OtherKey:="ART_ID")>  _
	Public Property T_J_ART_ARP_JAA() As EntitySet(Of T_J_ART_ARP_JAA)
		Get
			Return Me._T_J_ART_ARP_JAA
		End Get
		Set
			Me._T_J_ART_ARP_JAA.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="T_ARTICLE_ART_T_REFERENCES_FOB_RFO", Storage:="_T_REFERENCES_FOB_RFO", ThisKey:="ART_ID", OtherKey:="ART_ID")>  _
	Public Property T_REFERENCES_FOB_RFO() As EntitySet(Of T_REFERENCES_FOB_RFO)
		Get
			Return Me._T_REFERENCES_FOB_RFO
		End Get
		Set
			Me._T_REFERENCES_FOB_RFO.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_T_J_ART_ARP_JAA(ByVal entity As T_J_ART_ARP_JAA)
		Me.SendPropertyChanging
		entity.T_ARTICLE_ART = Me
	End Sub
	
	Private Sub detach_T_J_ART_ARP_JAA(ByVal entity As T_J_ART_ARP_JAA)
		Me.SendPropertyChanging
		entity.T_ARTICLE_ART = Nothing
	End Sub
	
	Private Sub attach_T_REFERENCES_FOB_RFO(ByVal entity As T_REFERENCES_FOB_RFO)
		Me.SendPropertyChanging
		entity.T_ARTICLE_ART = Me
	End Sub
	
	Private Sub detach_T_REFERENCES_FOB_RFO(ByVal entity As T_REFERENCES_FOB_RFO)
		Me.SendPropertyChanging
		entity.T_ARTICLE_ART = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="PRODUCTION.T_ARTICLE_STANDARD_AST")>  _
Partial Public Class T_ARTICLE_STANDARD_AST
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ART_ID As Integer
	
	Private _TAR_ID As Integer
	
	Private _GRA_ID As Integer
	
	Private _TYP_ID As System.Nullable(Of Integer)
	
	Private _COS_ID As System.Nullable(Of Integer)
	
	Private _CSI_ID As System.Nullable(Of Integer)
	
	Private _TVA_ID As System.Nullable(Of Integer)
	
	Private _UTE_UNITE_STOCK As System.Nullable(Of Integer)
	
	Private _AST_DERNIER_INVENTAIRE As System.Nullable(Of Date)
	
	Private _AST_STOCK_SECU As Single
	
	Private _AST_STOCK_REEL As Single
	
	Private _PCA_ID As Integer
	
	Private _SCO_ID As Integer
	
	Private _MCO_ID As Integer
	
	Private _AST_QTE_ECO_COMMANDE As Single
	
	Private _AST_SEUIL_REAPPRO As Single
	
	Private _AST_INTERVALLE_ORDRE As Integer
	
	Private _AST_DELAI_APPRO As Integer
	
	Private _AST_DELAI_SECU As Integer
	
	Private _AST_POST_CONSO As Integer
	
	Private _AST_HORIZON_PLANIFICATION As Integer
	
	Private _UTE_UNITE_ACHAT As Integer
	
	Private _UTE_UNITE_PRIX_ACHAT As Integer
	
	Private _GSA_ID As System.Nullable(Of Integer)
	
	Private _AST_PRIX_ACHAT As Decimal
	
	Private _AST_PRIX_MOYEN_ACHAT As Decimal
	
	Private _AST_DERNIER_PRIX_ACHAT As Decimal
	
	Private _FOB_ID As System.Nullable(Of Integer)
	
	Private _AST_CONSO_INFO As System.Nullable(Of Single)
	
	Private _AST_CONSO_HISTO As System.Nullable(Of Single)
	
	Private _AST_CONSO_PILOTE As System.Nullable(Of Single)
	
	Private _AST_DATE_MAJ_ARTICLE As System.Nullable(Of Date)
	
	Private _AST_APPRO_COMMUN_PNS_SERTA As System.Nullable(Of Byte)
	
	Private _AST_APPRO_SERTA_PNS As System.Nullable(Of Byte)
	
	Private _AST_APPRO_PNS_SERTA As System.Nullable(Of Byte)
	
	Private _AST_QTE_CONSO_PNS_ANNEE_MOINS_1 As System.Nullable(Of Single)
	
	Private _AST_BUDGET_PREVU_ANNEE_EN_COURS As System.Nullable(Of Single)
	
	Private _AST_CONSO_ANNEE_EN_COURS As System.Nullable(Of Single)
	
	Private _AST_PRIX_MOYEN_ACHAT_ANNEE_MOINS_1 As System.Nullable(Of Single)
	
	Private _NAR_ID As System.Nullable(Of Integer)
	
	Private _AST_REF_VERIN_ACHETE As String
	
	Private _AST_CLIENT_PRINCIPAL As String
	
	Private _T_ARTICLE_ART As EntityRef(Of T_ARTICLE_ART)
	
    #Region "Définitions de méthodes d'extensibilité"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnART_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnART_IDChanged()
    End Sub
    Partial Private Sub OnTAR_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTAR_IDChanged()
    End Sub
    Partial Private Sub OnGRA_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnGRA_IDChanged()
    End Sub
    Partial Private Sub OnTYP_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYP_IDChanged()
    End Sub
    Partial Private Sub OnCOS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOS_IDChanged()
    End Sub
    Partial Private Sub OnCSI_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCSI_IDChanged()
    End Sub
    Partial Private Sub OnTVA_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTVA_IDChanged()
    End Sub
    Partial Private Sub OnUTE_UNITE_STOCKChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUTE_UNITE_STOCKChanged()
    End Sub
    Partial Private Sub OnAST_DERNIER_INVENTAIREChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnAST_DERNIER_INVENTAIREChanged()
    End Sub
    Partial Private Sub OnAST_STOCK_SECUChanging(value As Single)
    End Sub
    Partial Private Sub OnAST_STOCK_SECUChanged()
    End Sub
    Partial Private Sub OnAST_STOCK_REELChanging(value As Single)
    End Sub
    Partial Private Sub OnAST_STOCK_REELChanged()
    End Sub
    Partial Private Sub OnPCA_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPCA_IDChanged()
    End Sub
    Partial Private Sub OnSCO_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnSCO_IDChanged()
    End Sub
    Partial Private Sub OnMCO_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnMCO_IDChanged()
    End Sub
    Partial Private Sub OnAST_QTE_ECO_COMMANDEChanging(value As Single)
    End Sub
    Partial Private Sub OnAST_QTE_ECO_COMMANDEChanged()
    End Sub
    Partial Private Sub OnAST_SEUIL_REAPPROChanging(value As Single)
    End Sub
    Partial Private Sub OnAST_SEUIL_REAPPROChanged()
    End Sub
    Partial Private Sub OnAST_INTERVALLE_ORDREChanging(value As Integer)
    End Sub
    Partial Private Sub OnAST_INTERVALLE_ORDREChanged()
    End Sub
    Partial Private Sub OnAST_DELAI_APPROChanging(value As Integer)
    End Sub
    Partial Private Sub OnAST_DELAI_APPROChanged()
    End Sub
    Partial Private Sub OnAST_DELAI_SECUChanging(value As Integer)
    End Sub
    Partial Private Sub OnAST_DELAI_SECUChanged()
    End Sub
    Partial Private Sub OnAST_POST_CONSOChanging(value As Integer)
    End Sub
    Partial Private Sub OnAST_POST_CONSOChanged()
    End Sub
    Partial Private Sub OnAST_HORIZON_PLANIFICATIONChanging(value As Integer)
    End Sub
    Partial Private Sub OnAST_HORIZON_PLANIFICATIONChanged()
    End Sub
    Partial Private Sub OnUTE_UNITE_ACHATChanging(value As Integer)
    End Sub
    Partial Private Sub OnUTE_UNITE_ACHATChanged()
    End Sub
    Partial Private Sub OnUTE_UNITE_PRIX_ACHATChanging(value As Integer)
    End Sub
    Partial Private Sub OnUTE_UNITE_PRIX_ACHATChanged()
    End Sub
    Partial Private Sub OnGSA_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGSA_IDChanged()
    End Sub
    Partial Private Sub OnAST_PRIX_ACHATChanging(value As Decimal)
    End Sub
    Partial Private Sub OnAST_PRIX_ACHATChanged()
    End Sub
    Partial Private Sub OnAST_PRIX_MOYEN_ACHATChanging(value As Decimal)
    End Sub
    Partial Private Sub OnAST_PRIX_MOYEN_ACHATChanged()
    End Sub
    Partial Private Sub OnAST_DERNIER_PRIX_ACHATChanging(value As Decimal)
    End Sub
    Partial Private Sub OnAST_DERNIER_PRIX_ACHATChanged()
    End Sub
    Partial Private Sub OnFOB_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFOB_IDChanged()
    End Sub
    Partial Private Sub OnAST_CONSO_INFOChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnAST_CONSO_INFOChanged()
    End Sub
    Partial Private Sub OnAST_CONSO_HISTOChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnAST_CONSO_HISTOChanged()
    End Sub
    Partial Private Sub OnAST_CONSO_PILOTEChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnAST_CONSO_PILOTEChanged()
    End Sub
    Partial Private Sub OnAST_DATE_MAJ_ARTICLEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnAST_DATE_MAJ_ARTICLEChanged()
    End Sub
    Partial Private Sub OnAST_APPRO_COMMUN_PNS_SERTAChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnAST_APPRO_COMMUN_PNS_SERTAChanged()
    End Sub
    Partial Private Sub OnAST_APPRO_SERTA_PNSChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnAST_APPRO_SERTA_PNSChanged()
    End Sub
    Partial Private Sub OnAST_APPRO_PNS_SERTAChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnAST_APPRO_PNS_SERTAChanged()
    End Sub
    Partial Private Sub OnAST_QTE_CONSO_PNS_ANNEE_MOINS_1Changing(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnAST_QTE_CONSO_PNS_ANNEE_MOINS_1Changed()
    End Sub
    Partial Private Sub OnAST_BUDGET_PREVU_ANNEE_EN_COURSChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnAST_BUDGET_PREVU_ANNEE_EN_COURSChanged()
    End Sub
    Partial Private Sub OnAST_CONSO_ANNEE_EN_COURSChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnAST_CONSO_ANNEE_EN_COURSChanged()
    End Sub
    Partial Private Sub OnAST_PRIX_MOYEN_ACHAT_ANNEE_MOINS_1Changing(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnAST_PRIX_MOYEN_ACHAT_ANNEE_MOINS_1Changed()
    End Sub
    Partial Private Sub OnNAR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNAR_IDChanged()
    End Sub
    Partial Private Sub OnAST_REF_VERIN_ACHETEChanging(value As String)
    End Sub
    Partial Private Sub OnAST_REF_VERIN_ACHETEChanged()
    End Sub
    Partial Private Sub OnAST_CLIENT_PRINCIPALChanging(value As String)
    End Sub
    Partial Private Sub OnAST_CLIENT_PRINCIPALChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._T_ARTICLE_ART = CType(Nothing, EntityRef(Of T_ARTICLE_ART))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ART_ID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property ART_ID() As Integer
		Get
			Return Me._ART_ID
		End Get
		Set
			If ((Me._ART_ID = value)  _
						= false) Then
				If Me._T_ARTICLE_ART.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnART_IDChanging(value)
				Me.SendPropertyChanging
				Me._ART_ID = value
				Me.SendPropertyChanged("ART_ID")
				Me.OnART_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAR_ID", DbType:="Int NOT NULL")>  _
	Public Property TAR_ID() As Integer
		Get
			Return Me._TAR_ID
		End Get
		Set
			If ((Me._TAR_ID = value)  _
						= false) Then
				Me.OnTAR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TAR_ID = value
				Me.SendPropertyChanged("TAR_ID")
				Me.OnTAR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GRA_ID", DbType:="Int NOT NULL")>  _
	Public Property GRA_ID() As Integer
		Get
			Return Me._GRA_ID
		End Get
		Set
			If ((Me._GRA_ID = value)  _
						= false) Then
				Me.OnGRA_IDChanging(value)
				Me.SendPropertyChanging
				Me._GRA_ID = value
				Me.SendPropertyChanged("GRA_ID")
				Me.OnGRA_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYP_ID", DbType:="Int")>  _
	Public Property TYP_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TYP_ID
		End Get
		Set
			If (Me._TYP_ID.Equals(value) = false) Then
				Me.OnTYP_IDChanging(value)
				Me.SendPropertyChanging
				Me._TYP_ID = value
				Me.SendPropertyChanged("TYP_ID")
				Me.OnTYP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COS_ID", DbType:="Int")>  _
	Public Property COS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._COS_ID
		End Get
		Set
			If (Me._COS_ID.Equals(value) = false) Then
				Me.OnCOS_IDChanging(value)
				Me.SendPropertyChanging
				Me._COS_ID = value
				Me.SendPropertyChanged("COS_ID")
				Me.OnCOS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CSI_ID", DbType:="Int")>  _
	Public Property CSI_ID() As System.Nullable(Of Integer)
		Get
			Return Me._CSI_ID
		End Get
		Set
			If (Me._CSI_ID.Equals(value) = false) Then
				Me.OnCSI_IDChanging(value)
				Me.SendPropertyChanging
				Me._CSI_ID = value
				Me.SendPropertyChanged("CSI_ID")
				Me.OnCSI_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TVA_ID", DbType:="Int")>  _
	Public Property TVA_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TVA_ID
		End Get
		Set
			If (Me._TVA_ID.Equals(value) = false) Then
				Me.OnTVA_IDChanging(value)
				Me.SendPropertyChanging
				Me._TVA_ID = value
				Me.SendPropertyChanged("TVA_ID")
				Me.OnTVA_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UTE_UNITE_STOCK", DbType:="Int")>  _
	Public Property UTE_UNITE_STOCK() As System.Nullable(Of Integer)
		Get
			Return Me._UTE_UNITE_STOCK
		End Get
		Set
			If (Me._UTE_UNITE_STOCK.Equals(value) = false) Then
				Me.OnUTE_UNITE_STOCKChanging(value)
				Me.SendPropertyChanging
				Me._UTE_UNITE_STOCK = value
				Me.SendPropertyChanged("UTE_UNITE_STOCK")
				Me.OnUTE_UNITE_STOCKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AST_DERNIER_INVENTAIRE", DbType:="Date")>  _
	Public Property AST_DERNIER_INVENTAIRE() As System.Nullable(Of Date)
		Get
			Return Me._AST_DERNIER_INVENTAIRE
		End Get
		Set
			If (Me._AST_DERNIER_INVENTAIRE.Equals(value) = false) Then
				Me.OnAST_DERNIER_INVENTAIREChanging(value)
				Me.SendPropertyChanging
				Me._AST_DERNIER_INVENTAIRE = value
				Me.SendPropertyChanged("AST_DERNIER_INVENTAIRE")
				Me.OnAST_DERNIER_INVENTAIREChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AST_STOCK_SECU", DbType:="Real NOT NULL")>  _
	Public Property AST_STOCK_SECU() As Single
		Get
			Return Me._AST_STOCK_SECU
		End Get
		Set
			If ((Me._AST_STOCK_SECU = value)  _
						= false) Then
				Me.OnAST_STOCK_SECUChanging(value)
				Me.SendPropertyChanging
				Me._AST_STOCK_SECU = value
				Me.SendPropertyChanged("AST_STOCK_SECU")
				Me.OnAST_STOCK_SECUChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AST_STOCK_REEL", DbType:="Real NOT NULL")>  _
	Public Property AST_STOCK_REEL() As Single
		Get
			Return Me._AST_STOCK_REEL
		End Get
		Set
			If ((Me._AST_STOCK_REEL = value)  _
						= false) Then
				Me.OnAST_STOCK_REELChanging(value)
				Me.SendPropertyChanging
				Me._AST_STOCK_REEL = value
				Me.SendPropertyChanged("AST_STOCK_REEL")
				Me.OnAST_STOCK_REELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PCA_ID", DbType:="Int NOT NULL")>  _
	Public Property PCA_ID() As Integer
		Get
			Return Me._PCA_ID
		End Get
		Set
			If ((Me._PCA_ID = value)  _
						= false) Then
				Me.OnPCA_IDChanging(value)
				Me.SendPropertyChanging
				Me._PCA_ID = value
				Me.SendPropertyChanged("PCA_ID")
				Me.OnPCA_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCO_ID", DbType:="Int NOT NULL")>  _
	Public Property SCO_ID() As Integer
		Get
			Return Me._SCO_ID
		End Get
		Set
			If ((Me._SCO_ID = value)  _
						= false) Then
				Me.OnSCO_IDChanging(value)
				Me.SendPropertyChanging
				Me._SCO_ID = value
				Me.SendPropertyChanged("SCO_ID")
				Me.OnSCO_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MCO_ID", DbType:="Int NOT NULL")>  _
	Public Property MCO_ID() As Integer
		Get
			Return Me._MCO_ID
		End Get
		Set
			If ((Me._MCO_ID = value)  _
						= false) Then
				Me.OnMCO_IDChanging(value)
				Me.SendPropertyChanging
				Me._MCO_ID = value
				Me.SendPropertyChanged("MCO_ID")
				Me.OnMCO_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AST_QTE_ECO_COMMANDE", DbType:="Real NOT NULL")>  _
	Public Property AST_QTE_ECO_COMMANDE() As Single
		Get
			Return Me._AST_QTE_ECO_COMMANDE
		End Get
		Set
			If ((Me._AST_QTE_ECO_COMMANDE = value)  _
						= false) Then
				Me.OnAST_QTE_ECO_COMMANDEChanging(value)
				Me.SendPropertyChanging
				Me._AST_QTE_ECO_COMMANDE = value
				Me.SendPropertyChanged("AST_QTE_ECO_COMMANDE")
				Me.OnAST_QTE_ECO_COMMANDEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AST_SEUIL_REAPPRO", DbType:="Real NOT NULL")>  _
	Public Property AST_SEUIL_REAPPRO() As Single
		Get
			Return Me._AST_SEUIL_REAPPRO
		End Get
		Set
			If ((Me._AST_SEUIL_REAPPRO = value)  _
						= false) Then
				Me.OnAST_SEUIL_REAPPROChanging(value)
				Me.SendPropertyChanging
				Me._AST_SEUIL_REAPPRO = value
				Me.SendPropertyChanged("AST_SEUIL_REAPPRO")
				Me.OnAST_SEUIL_REAPPROChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AST_INTERVALLE_ORDRE", DbType:="Int NOT NULL")>  _
	Public Property AST_INTERVALLE_ORDRE() As Integer
		Get
			Return Me._AST_INTERVALLE_ORDRE
		End Get
		Set
			If ((Me._AST_INTERVALLE_ORDRE = value)  _
						= false) Then
				Me.OnAST_INTERVALLE_ORDREChanging(value)
				Me.SendPropertyChanging
				Me._AST_INTERVALLE_ORDRE = value
				Me.SendPropertyChanged("AST_INTERVALLE_ORDRE")
				Me.OnAST_INTERVALLE_ORDREChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AST_DELAI_APPRO", DbType:="Int NOT NULL")>  _
	Public Property AST_DELAI_APPRO() As Integer
		Get
			Return Me._AST_DELAI_APPRO
		End Get
		Set
			If ((Me._AST_DELAI_APPRO = value)  _
						= false) Then
				Me.OnAST_DELAI_APPROChanging(value)
				Me.SendPropertyChanging
				Me._AST_DELAI_APPRO = value
				Me.SendPropertyChanged("AST_DELAI_APPRO")
				Me.OnAST_DELAI_APPROChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AST_DELAI_SECU", DbType:="Int NOT NULL")>  _
	Public Property AST_DELAI_SECU() As Integer
		Get
			Return Me._AST_DELAI_SECU
		End Get
		Set
			If ((Me._AST_DELAI_SECU = value)  _
						= false) Then
				Me.OnAST_DELAI_SECUChanging(value)
				Me.SendPropertyChanging
				Me._AST_DELAI_SECU = value
				Me.SendPropertyChanged("AST_DELAI_SECU")
				Me.OnAST_DELAI_SECUChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AST_POST_CONSO", DbType:="Int NOT NULL")>  _
	Public Property AST_POST_CONSO() As Integer
		Get
			Return Me._AST_POST_CONSO
		End Get
		Set
			If ((Me._AST_POST_CONSO = value)  _
						= false) Then
				Me.OnAST_POST_CONSOChanging(value)
				Me.SendPropertyChanging
				Me._AST_POST_CONSO = value
				Me.SendPropertyChanged("AST_POST_CONSO")
				Me.OnAST_POST_CONSOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AST_HORIZON_PLANIFICATION", DbType:="Int NOT NULL")>  _
	Public Property AST_HORIZON_PLANIFICATION() As Integer
		Get
			Return Me._AST_HORIZON_PLANIFICATION
		End Get
		Set
			If ((Me._AST_HORIZON_PLANIFICATION = value)  _
						= false) Then
				Me.OnAST_HORIZON_PLANIFICATIONChanging(value)
				Me.SendPropertyChanging
				Me._AST_HORIZON_PLANIFICATION = value
				Me.SendPropertyChanged("AST_HORIZON_PLANIFICATION")
				Me.OnAST_HORIZON_PLANIFICATIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UTE_UNITE_ACHAT", DbType:="Int NOT NULL")>  _
	Public Property UTE_UNITE_ACHAT() As Integer
		Get
			Return Me._UTE_UNITE_ACHAT
		End Get
		Set
			If ((Me._UTE_UNITE_ACHAT = value)  _
						= false) Then
				Me.OnUTE_UNITE_ACHATChanging(value)
				Me.SendPropertyChanging
				Me._UTE_UNITE_ACHAT = value
				Me.SendPropertyChanged("UTE_UNITE_ACHAT")
				Me.OnUTE_UNITE_ACHATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UTE_UNITE_PRIX_ACHAT", DbType:="Int NOT NULL")>  _
	Public Property UTE_UNITE_PRIX_ACHAT() As Integer
		Get
			Return Me._UTE_UNITE_PRIX_ACHAT
		End Get
		Set
			If ((Me._UTE_UNITE_PRIX_ACHAT = value)  _
						= false) Then
				Me.OnUTE_UNITE_PRIX_ACHATChanging(value)
				Me.SendPropertyChanging
				Me._UTE_UNITE_PRIX_ACHAT = value
				Me.SendPropertyChanged("UTE_UNITE_PRIX_ACHAT")
				Me.OnUTE_UNITE_PRIX_ACHATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GSA_ID", DbType:="Int")>  _
	Public Property GSA_ID() As System.Nullable(Of Integer)
		Get
			Return Me._GSA_ID
		End Get
		Set
			If (Me._GSA_ID.Equals(value) = false) Then
				Me.OnGSA_IDChanging(value)
				Me.SendPropertyChanging
				Me._GSA_ID = value
				Me.SendPropertyChanged("GSA_ID")
				Me.OnGSA_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AST_PRIX_ACHAT", DbType:="SmallMoney NOT NULL")>  _
	Public Property AST_PRIX_ACHAT() As Decimal
		Get
			Return Me._AST_PRIX_ACHAT
		End Get
		Set
			If ((Me._AST_PRIX_ACHAT = value)  _
						= false) Then
				Me.OnAST_PRIX_ACHATChanging(value)
				Me.SendPropertyChanging
				Me._AST_PRIX_ACHAT = value
				Me.SendPropertyChanged("AST_PRIX_ACHAT")
				Me.OnAST_PRIX_ACHATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AST_PRIX_MOYEN_ACHAT", DbType:="SmallMoney NOT NULL")>  _
	Public Property AST_PRIX_MOYEN_ACHAT() As Decimal
		Get
			Return Me._AST_PRIX_MOYEN_ACHAT
		End Get
		Set
			If ((Me._AST_PRIX_MOYEN_ACHAT = value)  _
						= false) Then
				Me.OnAST_PRIX_MOYEN_ACHATChanging(value)
				Me.SendPropertyChanging
				Me._AST_PRIX_MOYEN_ACHAT = value
				Me.SendPropertyChanged("AST_PRIX_MOYEN_ACHAT")
				Me.OnAST_PRIX_MOYEN_ACHATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AST_DERNIER_PRIX_ACHAT", DbType:="SmallMoney NOT NULL")>  _
	Public Property AST_DERNIER_PRIX_ACHAT() As Decimal
		Get
			Return Me._AST_DERNIER_PRIX_ACHAT
		End Get
		Set
			If ((Me._AST_DERNIER_PRIX_ACHAT = value)  _
						= false) Then
				Me.OnAST_DERNIER_PRIX_ACHATChanging(value)
				Me.SendPropertyChanging
				Me._AST_DERNIER_PRIX_ACHAT = value
				Me.SendPropertyChanged("AST_DERNIER_PRIX_ACHAT")
				Me.OnAST_DERNIER_PRIX_ACHATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOB_ID", DbType:="Int")>  _
	Public Property FOB_ID() As System.Nullable(Of Integer)
		Get
			Return Me._FOB_ID
		End Get
		Set
			If (Me._FOB_ID.Equals(value) = false) Then
				Me.OnFOB_IDChanging(value)
				Me.SendPropertyChanging
				Me._FOB_ID = value
				Me.SendPropertyChanged("FOB_ID")
				Me.OnFOB_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AST_CONSO_INFO", DbType:="Real")>  _
	Public Property AST_CONSO_INFO() As System.Nullable(Of Single)
		Get
			Return Me._AST_CONSO_INFO
		End Get
		Set
			If (Me._AST_CONSO_INFO.Equals(value) = false) Then
				Me.OnAST_CONSO_INFOChanging(value)
				Me.SendPropertyChanging
				Me._AST_CONSO_INFO = value
				Me.SendPropertyChanged("AST_CONSO_INFO")
				Me.OnAST_CONSO_INFOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AST_CONSO_HISTO", DbType:="Real")>  _
	Public Property AST_CONSO_HISTO() As System.Nullable(Of Single)
		Get
			Return Me._AST_CONSO_HISTO
		End Get
		Set
			If (Me._AST_CONSO_HISTO.Equals(value) = false) Then
				Me.OnAST_CONSO_HISTOChanging(value)
				Me.SendPropertyChanging
				Me._AST_CONSO_HISTO = value
				Me.SendPropertyChanged("AST_CONSO_HISTO")
				Me.OnAST_CONSO_HISTOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AST_CONSO_PILOTE", DbType:="Real")>  _
	Public Property AST_CONSO_PILOTE() As System.Nullable(Of Single)
		Get
			Return Me._AST_CONSO_PILOTE
		End Get
		Set
			If (Me._AST_CONSO_PILOTE.Equals(value) = false) Then
				Me.OnAST_CONSO_PILOTEChanging(value)
				Me.SendPropertyChanging
				Me._AST_CONSO_PILOTE = value
				Me.SendPropertyChanged("AST_CONSO_PILOTE")
				Me.OnAST_CONSO_PILOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AST_DATE_MAJ_ARTICLE", DbType:="Date")>  _
	Public Property AST_DATE_MAJ_ARTICLE() As System.Nullable(Of Date)
		Get
			Return Me._AST_DATE_MAJ_ARTICLE
		End Get
		Set
			If (Me._AST_DATE_MAJ_ARTICLE.Equals(value) = false) Then
				Me.OnAST_DATE_MAJ_ARTICLEChanging(value)
				Me.SendPropertyChanging
				Me._AST_DATE_MAJ_ARTICLE = value
				Me.SendPropertyChanged("AST_DATE_MAJ_ARTICLE")
				Me.OnAST_DATE_MAJ_ARTICLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AST_APPRO_COMMUN_PNS_SERTA", DbType:="TinyInt")>  _
	Public Property AST_APPRO_COMMUN_PNS_SERTA() As System.Nullable(Of Byte)
		Get
			Return Me._AST_APPRO_COMMUN_PNS_SERTA
		End Get
		Set
			If (Me._AST_APPRO_COMMUN_PNS_SERTA.Equals(value) = false) Then
				Me.OnAST_APPRO_COMMUN_PNS_SERTAChanging(value)
				Me.SendPropertyChanging
				Me._AST_APPRO_COMMUN_PNS_SERTA = value
				Me.SendPropertyChanged("AST_APPRO_COMMUN_PNS_SERTA")
				Me.OnAST_APPRO_COMMUN_PNS_SERTAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AST_APPRO_SERTA_PNS", DbType:="TinyInt")>  _
	Public Property AST_APPRO_SERTA_PNS() As System.Nullable(Of Byte)
		Get
			Return Me._AST_APPRO_SERTA_PNS
		End Get
		Set
			If (Me._AST_APPRO_SERTA_PNS.Equals(value) = false) Then
				Me.OnAST_APPRO_SERTA_PNSChanging(value)
				Me.SendPropertyChanging
				Me._AST_APPRO_SERTA_PNS = value
				Me.SendPropertyChanged("AST_APPRO_SERTA_PNS")
				Me.OnAST_APPRO_SERTA_PNSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AST_APPRO_PNS_SERTA", DbType:="TinyInt")>  _
	Public Property AST_APPRO_PNS_SERTA() As System.Nullable(Of Byte)
		Get
			Return Me._AST_APPRO_PNS_SERTA
		End Get
		Set
			If (Me._AST_APPRO_PNS_SERTA.Equals(value) = false) Then
				Me.OnAST_APPRO_PNS_SERTAChanging(value)
				Me.SendPropertyChanging
				Me._AST_APPRO_PNS_SERTA = value
				Me.SendPropertyChanged("AST_APPRO_PNS_SERTA")
				Me.OnAST_APPRO_PNS_SERTAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AST_QTE_CONSO_PNS_ANNEE_MOINS_1", DbType:="Real")>  _
	Public Property AST_QTE_CONSO_PNS_ANNEE_MOINS_1() As System.Nullable(Of Single)
		Get
			Return Me._AST_QTE_CONSO_PNS_ANNEE_MOINS_1
		End Get
		Set
			If (Me._AST_QTE_CONSO_PNS_ANNEE_MOINS_1.Equals(value) = false) Then
				Me.OnAST_QTE_CONSO_PNS_ANNEE_MOINS_1Changing(value)
				Me.SendPropertyChanging
				Me._AST_QTE_CONSO_PNS_ANNEE_MOINS_1 = value
				Me.SendPropertyChanged("AST_QTE_CONSO_PNS_ANNEE_MOINS_1")
				Me.OnAST_QTE_CONSO_PNS_ANNEE_MOINS_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AST_BUDGET_PREVU_ANNEE_EN_COURS", DbType:="Real")>  _
	Public Property AST_BUDGET_PREVU_ANNEE_EN_COURS() As System.Nullable(Of Single)
		Get
			Return Me._AST_BUDGET_PREVU_ANNEE_EN_COURS
		End Get
		Set
			If (Me._AST_BUDGET_PREVU_ANNEE_EN_COURS.Equals(value) = false) Then
				Me.OnAST_BUDGET_PREVU_ANNEE_EN_COURSChanging(value)
				Me.SendPropertyChanging
				Me._AST_BUDGET_PREVU_ANNEE_EN_COURS = value
				Me.SendPropertyChanged("AST_BUDGET_PREVU_ANNEE_EN_COURS")
				Me.OnAST_BUDGET_PREVU_ANNEE_EN_COURSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AST_CONSO_ANNEE_EN_COURS", DbType:="Real")>  _
	Public Property AST_CONSO_ANNEE_EN_COURS() As System.Nullable(Of Single)
		Get
			Return Me._AST_CONSO_ANNEE_EN_COURS
		End Get
		Set
			If (Me._AST_CONSO_ANNEE_EN_COURS.Equals(value) = false) Then
				Me.OnAST_CONSO_ANNEE_EN_COURSChanging(value)
				Me.SendPropertyChanging
				Me._AST_CONSO_ANNEE_EN_COURS = value
				Me.SendPropertyChanged("AST_CONSO_ANNEE_EN_COURS")
				Me.OnAST_CONSO_ANNEE_EN_COURSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AST_PRIX_MOYEN_ACHAT_ANNEE_MOINS_1", DbType:="Real")>  _
	Public Property AST_PRIX_MOYEN_ACHAT_ANNEE_MOINS_1() As System.Nullable(Of Single)
		Get
			Return Me._AST_PRIX_MOYEN_ACHAT_ANNEE_MOINS_1
		End Get
		Set
			If (Me._AST_PRIX_MOYEN_ACHAT_ANNEE_MOINS_1.Equals(value) = false) Then
				Me.OnAST_PRIX_MOYEN_ACHAT_ANNEE_MOINS_1Changing(value)
				Me.SendPropertyChanging
				Me._AST_PRIX_MOYEN_ACHAT_ANNEE_MOINS_1 = value
				Me.SendPropertyChanged("AST_PRIX_MOYEN_ACHAT_ANNEE_MOINS_1")
				Me.OnAST_PRIX_MOYEN_ACHAT_ANNEE_MOINS_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAR_ID", DbType:="Int")>  _
	Public Property NAR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._NAR_ID
		End Get
		Set
			If (Me._NAR_ID.Equals(value) = false) Then
				Me.OnNAR_IDChanging(value)
				Me.SendPropertyChanging
				Me._NAR_ID = value
				Me.SendPropertyChanged("NAR_ID")
				Me.OnNAR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AST_REF_VERIN_ACHETE", DbType:="VarChar(16)")>  _
	Public Property AST_REF_VERIN_ACHETE() As String
		Get
			Return Me._AST_REF_VERIN_ACHETE
		End Get
		Set
			If (String.Equals(Me._AST_REF_VERIN_ACHETE, value) = false) Then
				Me.OnAST_REF_VERIN_ACHETEChanging(value)
				Me.SendPropertyChanging
				Me._AST_REF_VERIN_ACHETE = value
				Me.SendPropertyChanged("AST_REF_VERIN_ACHETE")
				Me.OnAST_REF_VERIN_ACHETEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AST_CLIENT_PRINCIPAL", DbType:="VarChar(50)")>  _
	Public Property AST_CLIENT_PRINCIPAL() As String
		Get
			Return Me._AST_CLIENT_PRINCIPAL
		End Get
		Set
			If (String.Equals(Me._AST_CLIENT_PRINCIPAL, value) = false) Then
				Me.OnAST_CLIENT_PRINCIPALChanging(value)
				Me.SendPropertyChanging
				Me._AST_CLIENT_PRINCIPAL = value
				Me.SendPropertyChanged("AST_CLIENT_PRINCIPAL")
				Me.OnAST_CLIENT_PRINCIPALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="T_ARTICLE_ART_T_ARTICLE_STANDARD_AST", Storage:="_T_ARTICLE_ART", ThisKey:="ART_ID", OtherKey:="ART_ID", IsForeignKey:=true)>  _
	Public Property T_ARTICLE_ART() As T_ARTICLE_ART
		Get
			Return Me._T_ARTICLE_ART.Entity
		End Get
		Set
			Dim previousValue As T_ARTICLE_ART = Me._T_ARTICLE_ART.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._T_ARTICLE_ART.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._T_ARTICLE_ART.Entity = Nothing
					previousValue.T_ARTICLE_STANDARD_AST = Nothing
				End If
				Me._T_ARTICLE_ART.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.T_ARTICLE_STANDARD_AST = Me
					Me._ART_ID = value.ART_ID
				Else
					Me._ART_ID = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("T_ARTICLE_ART")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="PRODUCTION_PNS.T_J_ART_ARP_JAA")>  _
Partial Public Class T_J_ART_ARP_JAA
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _JAA_ID As Integer
	
	Private _ART_ID As Integer = CType(Nothing, Integer)
	
	Private _ARP_ID As Integer
	
	Private _JST_ID As Integer
	
	Private _JSR_ID As Integer
	
	Private _JAA_DATE_CREATION As Date
	
	Private _JAA_DATE_MAJ As Date
	
	Private _T_ARTICLE_ART As EntityRef(Of T_ARTICLE_ART)
	
	Private _T_ARTICLE_ARP As EntityRef(Of T_ARTICLE_ARP)
	
	Private _T_STATUT_JAA_JST As EntityRef(Of T_STATUT_JAA_JST)
	
	Private _T_SOURCE_JAA_JSR As EntityRef(Of T_SOURCE_JAA_JSR)
	
    #Region "Définitions de méthodes d'extensibilité"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnJAA_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnJAA_IDChanged()
    End Sub
    Partial Private Sub OnARP_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnARP_IDChanged()
    End Sub
    Partial Private Sub OnJST_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnJST_IDChanged()
    End Sub
    Partial Private Sub OnJSR_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnJSR_IDChanged()
    End Sub
    Partial Private Sub OnJAA_DATE_CREATIONChanging(value As Date)
    End Sub
    Partial Private Sub OnJAA_DATE_CREATIONChanged()
    End Sub
    Partial Private Sub OnJAA_DATE_MAJChanging(value As Date)
    End Sub
    Partial Private Sub OnJAA_DATE_MAJChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._T_ARTICLE_ART = CType(Nothing, EntityRef(Of T_ARTICLE_ART))
		Me._T_ARTICLE_ARP = CType(Nothing, EntityRef(Of T_ARTICLE_ARP))
		Me._T_STATUT_JAA_JST = CType(Nothing, EntityRef(Of T_STATUT_JAA_JST))
		Me._T_SOURCE_JAA_JSR = CType(Nothing, EntityRef(Of T_SOURCE_JAA_JSR))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JAA_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property JAA_ID() As Integer
		Get
			Return Me._JAA_ID
		End Get
		Set
			If ((Me._JAA_ID = value)  _
						= false) Then
				Me.OnJAA_IDChanging(value)
				Me.SendPropertyChanging
				Me._JAA_ID = value
				Me.SendPropertyChanged("JAA_ID")
				Me.OnJAA_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ART_ID", DbType:="Int NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public ReadOnly Property ART_ID() As Integer
		Get
			Return Me._ART_ID
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ARP_ID", DbType:="Int NOT NULL")>  _
	Public Property ARP_ID() As Integer
		Get
			Return Me._ARP_ID
		End Get
		Set
			If ((Me._ARP_ID = value)  _
						= false) Then
				If Me._T_ARTICLE_ARP.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnARP_IDChanging(value)
				Me.SendPropertyChanging
				Me._ARP_ID = value
				Me.SendPropertyChanged("ARP_ID")
				Me.OnARP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JST_ID", DbType:="Int NOT NULL")>  _
	Public Property JST_ID() As Integer
		Get
			Return Me._JST_ID
		End Get
		Set
			If ((Me._JST_ID = value)  _
						= false) Then
				If Me._T_STATUT_JAA_JST.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnJST_IDChanging(value)
				Me.SendPropertyChanging
				Me._JST_ID = value
				Me.SendPropertyChanged("JST_ID")
				Me.OnJST_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JSR_ID", DbType:="Int NOT NULL")>  _
	Public Property JSR_ID() As Integer
		Get
			Return Me._JSR_ID
		End Get
		Set
			If ((Me._JSR_ID = value)  _
						= false) Then
				If Me._T_SOURCE_JAA_JSR.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnJSR_IDChanging(value)
				Me.SendPropertyChanging
				Me._JSR_ID = value
				Me.SendPropertyChanged("JSR_ID")
				Me.OnJSR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JAA_DATE_CREATION", DbType:="Date NOT NULL")>  _
	Public Property JAA_DATE_CREATION() As Date
		Get
			Return Me._JAA_DATE_CREATION
		End Get
		Set
			If ((Me._JAA_DATE_CREATION = value)  _
						= false) Then
				Me.OnJAA_DATE_CREATIONChanging(value)
				Me.SendPropertyChanging
				Me._JAA_DATE_CREATION = value
				Me.SendPropertyChanged("JAA_DATE_CREATION")
				Me.OnJAA_DATE_CREATIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JAA_DATE_MAJ", DbType:="Date NOT NULL")>  _
	Public Property JAA_DATE_MAJ() As Date
		Get
			Return Me._JAA_DATE_MAJ
		End Get
		Set
			If ((Me._JAA_DATE_MAJ = value)  _
						= false) Then
				Me.OnJAA_DATE_MAJChanging(value)
				Me.SendPropertyChanging
				Me._JAA_DATE_MAJ = value
				Me.SendPropertyChanged("JAA_DATE_MAJ")
				Me.OnJAA_DATE_MAJChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="T_ARTICLE_ART_T_J_ART_ARP_JAA", Storage:="_T_ARTICLE_ART", ThisKey:="ART_ID", OtherKey:="ART_ID", IsForeignKey:=true)>  _
	Public Property T_ARTICLE_ART() As T_ARTICLE_ART
		Get
			Return Me._T_ARTICLE_ART.Entity
		End Get
		Set
			Dim previousValue As T_ARTICLE_ART = Me._T_ARTICLE_ART.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._T_ARTICLE_ART.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._T_ARTICLE_ART.Entity = Nothing
					previousValue.T_J_ART_ARP_JAA.Remove(Me)
				End If
				Me._T_ARTICLE_ART.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.T_J_ART_ARP_JAA.Add(Me)
					Me._ART_ID = value.ART_ID
				Else
					Me._ART_ID = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("T_ARTICLE_ART")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="T_ARTICLE_ARP_T_J_ART_ARP_JAA", Storage:="_T_ARTICLE_ARP", ThisKey:="ARP_ID", OtherKey:="ARP_ID", IsForeignKey:=true)>  _
	Public Property T_ARTICLE_ARP() As T_ARTICLE_ARP
		Get
			Return Me._T_ARTICLE_ARP.Entity
		End Get
		Set
			Dim previousValue As T_ARTICLE_ARP = Me._T_ARTICLE_ARP.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._T_ARTICLE_ARP.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._T_ARTICLE_ARP.Entity = Nothing
					previousValue.T_J_ART_ARP_JAA.Remove(Me)
				End If
				Me._T_ARTICLE_ARP.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.T_J_ART_ARP_JAA.Add(Me)
					Me._ARP_ID = value.ARP_ID
				Else
					Me._ARP_ID = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("T_ARTICLE_ARP")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="T_STATUT_JAA_JST_T_J_ART_ARP_JAA", Storage:="_T_STATUT_JAA_JST", ThisKey:="JST_ID", OtherKey:="JST_ID", IsForeignKey:=true)>  _
	Public Property T_STATUT_JAA_JST() As T_STATUT_JAA_JST
		Get
			Return Me._T_STATUT_JAA_JST.Entity
		End Get
		Set
			Dim previousValue As T_STATUT_JAA_JST = Me._T_STATUT_JAA_JST.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._T_STATUT_JAA_JST.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._T_STATUT_JAA_JST.Entity = Nothing
					previousValue.T_J_ART_ARP_JAA.Remove(Me)
				End If
				Me._T_STATUT_JAA_JST.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.T_J_ART_ARP_JAA.Add(Me)
					Me._JST_ID = value.JST_ID
				Else
					Me._JST_ID = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("T_STATUT_JAA_JST")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="T_SOURCE_JAA_JSR_T_J_ART_ARP_JAA", Storage:="_T_SOURCE_JAA_JSR", ThisKey:="JSR_ID", OtherKey:="JSR_ID", IsForeignKey:=true)>  _
	Public Property T_SOURCE_JAA_JSR() As T_SOURCE_JAA_JSR
		Get
			Return Me._T_SOURCE_JAA_JSR.Entity
		End Get
		Set
			Dim previousValue As T_SOURCE_JAA_JSR = Me._T_SOURCE_JAA_JSR.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._T_SOURCE_JAA_JSR.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._T_SOURCE_JAA_JSR.Entity = Nothing
					previousValue.T_J_ART_ARP_JAA.Remove(Me)
				End If
				Me._T_SOURCE_JAA_JSR.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.T_J_ART_ARP_JAA.Add(Me)
					Me._JSR_ID = value.JSR_ID
				Else
					Me._JSR_ID = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("T_SOURCE_JAA_JSR")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="PRODUCTION_PNS.T_ARTICLE_ARP")>  _
Partial Public Class T_ARTICLE_ARP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ARP_ID As Integer
	
	Private _ARP_REFERENCE As String
	
	Private _ARP_LIBELLE As String
	
	Private _ARP_INDICE As String
	
	Private _ARP_STATUT As String
	
	Private _TAP_ID As System.Nullable(Of Integer)
	
	Private _ARP_REFERENCE_SERTA As String
	
	Private _T_J_ART_ARP_JAA As EntitySet(Of T_J_ART_ARP_JAA)
	
	Private _T_TYPE_ARTICLE_TAP As EntityRef(Of T_TYPE_ARTICLE_TAP)
	
    #Region "Définitions de méthodes d'extensibilité"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnARP_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnARP_IDChanged()
    End Sub
    Partial Private Sub OnARP_REFERENCEChanging(value As String)
    End Sub
    Partial Private Sub OnARP_REFERENCEChanged()
    End Sub
    Partial Private Sub OnARP_LIBELLEChanging(value As String)
    End Sub
    Partial Private Sub OnARP_LIBELLEChanged()
    End Sub
    Partial Private Sub OnARP_INDICEChanging(value As String)
    End Sub
    Partial Private Sub OnARP_INDICEChanged()
    End Sub
    Partial Private Sub OnARP_STATUTChanging(value As String)
    End Sub
    Partial Private Sub OnARP_STATUTChanged()
    End Sub
    Partial Private Sub OnTAP_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTAP_IDChanged()
    End Sub
    Partial Private Sub OnARP_REFERENCE_SERTAChanging(value As String)
    End Sub
    Partial Private Sub OnARP_REFERENCE_SERTAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._T_J_ART_ARP_JAA = New EntitySet(Of T_J_ART_ARP_JAA)(AddressOf Me.attach_T_J_ART_ARP_JAA, AddressOf Me.detach_T_J_ART_ARP_JAA)
		Me._T_TYPE_ARTICLE_TAP = CType(Nothing, EntityRef(Of T_TYPE_ARTICLE_TAP))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ARP_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ARP_ID() As Integer
		Get
			Return Me._ARP_ID
		End Get
		Set
			If ((Me._ARP_ID = value)  _
						= false) Then
				Me.OnARP_IDChanging(value)
				Me.SendPropertyChanging
				Me._ARP_ID = value
				Me.SendPropertyChanged("ARP_ID")
				Me.OnARP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ARP_REFERENCE", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property ARP_REFERENCE() As String
		Get
			Return Me._ARP_REFERENCE
		End Get
		Set
			If (String.Equals(Me._ARP_REFERENCE, value) = false) Then
				Me.OnARP_REFERENCEChanging(value)
				Me.SendPropertyChanging
				Me._ARP_REFERENCE = value
				Me.SendPropertyChanged("ARP_REFERENCE")
				Me.OnARP_REFERENCEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ARP_LIBELLE", DbType:="NVarChar(100)")>  _
	Public Property ARP_LIBELLE() As String
		Get
			Return Me._ARP_LIBELLE
		End Get
		Set
			If (String.Equals(Me._ARP_LIBELLE, value) = false) Then
				Me.OnARP_LIBELLEChanging(value)
				Me.SendPropertyChanging
				Me._ARP_LIBELLE = value
				Me.SendPropertyChanged("ARP_LIBELLE")
				Me.OnARP_LIBELLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ARP_INDICE", DbType:="Char(2)")>  _
	Public Property ARP_INDICE() As String
		Get
			Return Me._ARP_INDICE
		End Get
		Set
			If (String.Equals(Me._ARP_INDICE, value) = false) Then
				Me.OnARP_INDICEChanging(value)
				Me.SendPropertyChanging
				Me._ARP_INDICE = value
				Me.SendPropertyChanged("ARP_INDICE")
				Me.OnARP_INDICEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ARP_STATUT", DbType:="Char(3)")>  _
	Public Property ARP_STATUT() As String
		Get
			Return Me._ARP_STATUT
		End Get
		Set
			If (String.Equals(Me._ARP_STATUT, value) = false) Then
				Me.OnARP_STATUTChanging(value)
				Me.SendPropertyChanging
				Me._ARP_STATUT = value
				Me.SendPropertyChanged("ARP_STATUT")
				Me.OnARP_STATUTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAP_ID", DbType:="Int")>  _
	Public Property TAP_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TAP_ID
		End Get
		Set
			If (Me._TAP_ID.Equals(value) = false) Then
				If Me._T_TYPE_ARTICLE_TAP.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnTAP_IDChanging(value)
				Me.SendPropertyChanging
				Me._TAP_ID = value
				Me.SendPropertyChanged("TAP_ID")
				Me.OnTAP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ARP_REFERENCE_SERTA", DbType:="VarChar(30)")>  _
	Public Property ARP_REFERENCE_SERTA() As String
		Get
			Return Me._ARP_REFERENCE_SERTA
		End Get
		Set
			If (String.Equals(Me._ARP_REFERENCE_SERTA, value) = false) Then
				Me.OnARP_REFERENCE_SERTAChanging(value)
				Me.SendPropertyChanging
				Me._ARP_REFERENCE_SERTA = value
				Me.SendPropertyChanged("ARP_REFERENCE_SERTA")
				Me.OnARP_REFERENCE_SERTAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="T_ARTICLE_ARP_T_J_ART_ARP_JAA", Storage:="_T_J_ART_ARP_JAA", ThisKey:="ARP_ID", OtherKey:="ARP_ID")>  _
	Public Property T_J_ART_ARP_JAA() As EntitySet(Of T_J_ART_ARP_JAA)
		Get
			Return Me._T_J_ART_ARP_JAA
		End Get
		Set
			Me._T_J_ART_ARP_JAA.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="T_TYPE_ARTICLE_TAP_T_ARTICLE_ARP", Storage:="_T_TYPE_ARTICLE_TAP", ThisKey:="TAP_ID", OtherKey:="TAP_ID", IsForeignKey:=true)>  _
	Public Property T_TYPE_ARTICLE_TAP() As T_TYPE_ARTICLE_TAP
		Get
			Return Me._T_TYPE_ARTICLE_TAP.Entity
		End Get
		Set
			Dim previousValue As T_TYPE_ARTICLE_TAP = Me._T_TYPE_ARTICLE_TAP.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._T_TYPE_ARTICLE_TAP.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._T_TYPE_ARTICLE_TAP.Entity = Nothing
					previousValue.T_ARTICLE_ARP.Remove(Me)
				End If
				Me._T_TYPE_ARTICLE_TAP.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.T_ARTICLE_ARP.Add(Me)
					Me._TAP_ID = value.TAP_ID
				Else
					Me._TAP_ID = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("T_TYPE_ARTICLE_TAP")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_T_J_ART_ARP_JAA(ByVal entity As T_J_ART_ARP_JAA)
		Me.SendPropertyChanging
		entity.T_ARTICLE_ARP = Me
	End Sub
	
	Private Sub detach_T_J_ART_ARP_JAA(ByVal entity As T_J_ART_ARP_JAA)
		Me.SendPropertyChanging
		entity.T_ARTICLE_ARP = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="PRODUCTION_PNS.T_STATUT_JAA_JST")>  _
Partial Public Class T_STATUT_JAA_JST
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _JST_ID As Integer
	
	Private _JST_LIBELLE As String
	
	Private _T_J_ART_ARP_JAA As EntitySet(Of T_J_ART_ARP_JAA)
	
    #Region "Définitions de méthodes d'extensibilité"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnJST_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnJST_IDChanged()
    End Sub
    Partial Private Sub OnJST_LIBELLEChanging(value As String)
    End Sub
    Partial Private Sub OnJST_LIBELLEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._T_J_ART_ARP_JAA = New EntitySet(Of T_J_ART_ARP_JAA)(AddressOf Me.attach_T_J_ART_ARP_JAA, AddressOf Me.detach_T_J_ART_ARP_JAA)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JST_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property JST_ID() As Integer
		Get
			Return Me._JST_ID
		End Get
		Set
			If ((Me._JST_ID = value)  _
						= false) Then
				Me.OnJST_IDChanging(value)
				Me.SendPropertyChanging
				Me._JST_ID = value
				Me.SendPropertyChanged("JST_ID")
				Me.OnJST_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JST_LIBELLE", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property JST_LIBELLE() As String
		Get
			Return Me._JST_LIBELLE
		End Get
		Set
			If (String.Equals(Me._JST_LIBELLE, value) = false) Then
				Me.OnJST_LIBELLEChanging(value)
				Me.SendPropertyChanging
				Me._JST_LIBELLE = value
				Me.SendPropertyChanged("JST_LIBELLE")
				Me.OnJST_LIBELLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="T_STATUT_JAA_JST_T_J_ART_ARP_JAA", Storage:="_T_J_ART_ARP_JAA", ThisKey:="JST_ID", OtherKey:="JST_ID")>  _
	Public Property T_J_ART_ARP_JAA() As EntitySet(Of T_J_ART_ARP_JAA)
		Get
			Return Me._T_J_ART_ARP_JAA
		End Get
		Set
			Me._T_J_ART_ARP_JAA.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_T_J_ART_ARP_JAA(ByVal entity As T_J_ART_ARP_JAA)
		Me.SendPropertyChanging
		entity.T_STATUT_JAA_JST = Me
	End Sub
	
	Private Sub detach_T_J_ART_ARP_JAA(ByVal entity As T_J_ART_ARP_JAA)
		Me.SendPropertyChanging
		entity.T_STATUT_JAA_JST = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="PRODUCTION_PNS.T_SOURCE_JAA_JSR")>  _
Partial Public Class T_SOURCE_JAA_JSR
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _JSR_ID As Integer
	
	Private _JSR_LIBELLE As String
	
	Private _T_J_ART_ARP_JAA As EntitySet(Of T_J_ART_ARP_JAA)
	
    #Region "Définitions de méthodes d'extensibilité"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnJSR_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnJSR_IDChanged()
    End Sub
    Partial Private Sub OnJSR_LIBELLEChanging(value As String)
    End Sub
    Partial Private Sub OnJSR_LIBELLEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._T_J_ART_ARP_JAA = New EntitySet(Of T_J_ART_ARP_JAA)(AddressOf Me.attach_T_J_ART_ARP_JAA, AddressOf Me.detach_T_J_ART_ARP_JAA)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JSR_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property JSR_ID() As Integer
		Get
			Return Me._JSR_ID
		End Get
		Set
			If ((Me._JSR_ID = value)  _
						= false) Then
				Me.OnJSR_IDChanging(value)
				Me.SendPropertyChanging
				Me._JSR_ID = value
				Me.SendPropertyChanged("JSR_ID")
				Me.OnJSR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JSR_LIBELLE", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property JSR_LIBELLE() As String
		Get
			Return Me._JSR_LIBELLE
		End Get
		Set
			If (String.Equals(Me._JSR_LIBELLE, value) = false) Then
				Me.OnJSR_LIBELLEChanging(value)
				Me.SendPropertyChanging
				Me._JSR_LIBELLE = value
				Me.SendPropertyChanged("JSR_LIBELLE")
				Me.OnJSR_LIBELLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="T_SOURCE_JAA_JSR_T_J_ART_ARP_JAA", Storage:="_T_J_ART_ARP_JAA", ThisKey:="JSR_ID", OtherKey:="JSR_ID")>  _
	Public Property T_J_ART_ARP_JAA() As EntitySet(Of T_J_ART_ARP_JAA)
		Get
			Return Me._T_J_ART_ARP_JAA
		End Get
		Set
			Me._T_J_ART_ARP_JAA.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_T_J_ART_ARP_JAA(ByVal entity As T_J_ART_ARP_JAA)
		Me.SendPropertyChanging
		entity.T_SOURCE_JAA_JSR = Me
	End Sub
	
	Private Sub detach_T_J_ART_ARP_JAA(ByVal entity As T_J_ART_ARP_JAA)
		Me.SendPropertyChanging
		entity.T_SOURCE_JAA_JSR = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="PRODUCTION_PNS.T_TYPE_ARTICLE_TAP")>  _
Partial Public Class T_TYPE_ARTICLE_TAP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TAP_ID As Integer
	
	Private _TAP_CODE As String
	
	Private _TAP_LIBELLE As String
	
	Private _T_ARTICLE_ARP As EntitySet(Of T_ARTICLE_ARP)
	
    #Region "Définitions de méthodes d'extensibilité"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTAP_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTAP_IDChanged()
    End Sub
    Partial Private Sub OnTAP_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnTAP_CODEChanged()
    End Sub
    Partial Private Sub OnTAP_LIBELLEChanging(value As String)
    End Sub
    Partial Private Sub OnTAP_LIBELLEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._T_ARTICLE_ARP = New EntitySet(Of T_ARTICLE_ARP)(AddressOf Me.attach_T_ARTICLE_ARP, AddressOf Me.detach_T_ARTICLE_ARP)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAP_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TAP_ID() As Integer
		Get
			Return Me._TAP_ID
		End Get
		Set
			If ((Me._TAP_ID = value)  _
						= false) Then
				Me.OnTAP_IDChanging(value)
				Me.SendPropertyChanging
				Me._TAP_ID = value
				Me.SendPropertyChanged("TAP_ID")
				Me.OnTAP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAP_CODE", DbType:="VarChar(30)")>  _
	Public Property TAP_CODE() As String
		Get
			Return Me._TAP_CODE
		End Get
		Set
			If (String.Equals(Me._TAP_CODE, value) = false) Then
				Me.OnTAP_CODEChanging(value)
				Me.SendPropertyChanging
				Me._TAP_CODE = value
				Me.SendPropertyChanged("TAP_CODE")
				Me.OnTAP_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAP_LIBELLE", DbType:="VarChar(60)")>  _
	Public Property TAP_LIBELLE() As String
		Get
			Return Me._TAP_LIBELLE
		End Get
		Set
			If (String.Equals(Me._TAP_LIBELLE, value) = false) Then
				Me.OnTAP_LIBELLEChanging(value)
				Me.SendPropertyChanging
				Me._TAP_LIBELLE = value
				Me.SendPropertyChanged("TAP_LIBELLE")
				Me.OnTAP_LIBELLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="T_TYPE_ARTICLE_TAP_T_ARTICLE_ARP", Storage:="_T_ARTICLE_ARP", ThisKey:="TAP_ID", OtherKey:="TAP_ID")>  _
	Public Property T_ARTICLE_ARP() As EntitySet(Of T_ARTICLE_ARP)
		Get
			Return Me._T_ARTICLE_ARP
		End Get
		Set
			Me._T_ARTICLE_ARP.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_T_ARTICLE_ARP(ByVal entity As T_ARTICLE_ARP)
		Me.SendPropertyChanging
		entity.T_TYPE_ARTICLE_TAP = Me
	End Sub
	
	Private Sub detach_T_ARTICLE_ARP(ByVal entity As T_ARTICLE_ARP)
		Me.SendPropertyChanging
		entity.T_TYPE_ARTICLE_TAP = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="ACHAT.T_REFERENCES_FOB_RFO")>  _
Partial Public Class T_REFERENCES_FOB_RFO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RFO_ID As Integer
	
	Private _RFO_REFERENCE As String
	
	Private _ART_ID As Integer
	
	Private _FOB_ID As Integer
	
	Private _T_ARTICLE_ART As EntityRef(Of T_ARTICLE_ART)
	
    #Region "Définitions de méthodes d'extensibilité"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRFO_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnRFO_IDChanged()
    End Sub
    Partial Private Sub OnRFO_REFERENCEChanging(value As String)
    End Sub
    Partial Private Sub OnRFO_REFERENCEChanged()
    End Sub
    Partial Private Sub OnART_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnART_IDChanged()
    End Sub
    Partial Private Sub OnFOB_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnFOB_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._T_ARTICLE_ART = CType(Nothing, EntityRef(Of T_ARTICLE_ART))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RFO_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RFO_ID() As Integer
		Get
			Return Me._RFO_ID
		End Get
		Set
			If ((Me._RFO_ID = value)  _
						= false) Then
				Me.OnRFO_IDChanging(value)
				Me.SendPropertyChanging
				Me._RFO_ID = value
				Me.SendPropertyChanged("RFO_ID")
				Me.OnRFO_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RFO_REFERENCE", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property RFO_REFERENCE() As String
		Get
			Return Me._RFO_REFERENCE
		End Get
		Set
			If (String.Equals(Me._RFO_REFERENCE, value) = false) Then
				Me.OnRFO_REFERENCEChanging(value)
				Me.SendPropertyChanging
				Me._RFO_REFERENCE = value
				Me.SendPropertyChanged("RFO_REFERENCE")
				Me.OnRFO_REFERENCEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ART_ID", DbType:="Int NOT NULL")>  _
	Public Property ART_ID() As Integer
		Get
			Return Me._ART_ID
		End Get
		Set
			If ((Me._ART_ID = value)  _
						= false) Then
				If Me._T_ARTICLE_ART.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnART_IDChanging(value)
				Me.SendPropertyChanging
				Me._ART_ID = value
				Me.SendPropertyChanged("ART_ID")
				Me.OnART_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOB_ID", DbType:="Int NOT NULL")>  _
	Public Property FOB_ID() As Integer
		Get
			Return Me._FOB_ID
		End Get
		Set
			If ((Me._FOB_ID = value)  _
						= false) Then
				Me.OnFOB_IDChanging(value)
				Me.SendPropertyChanging
				Me._FOB_ID = value
				Me.SendPropertyChanged("FOB_ID")
				Me.OnFOB_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="T_ARTICLE_ART_T_REFERENCES_FOB_RFO", Storage:="_T_ARTICLE_ART", ThisKey:="ART_ID", OtherKey:="ART_ID", IsForeignKey:=true)>  _
	Public Property T_ARTICLE_ART() As T_ARTICLE_ART
		Get
			Return Me._T_ARTICLE_ART.Entity
		End Get
		Set
			Dim previousValue As T_ARTICLE_ART = Me._T_ARTICLE_ART.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._T_ARTICLE_ART.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._T_ARTICLE_ART.Entity = Nothing
					previousValue.T_REFERENCES_FOB_RFO.Remove(Me)
				End If
				Me._T_ARTICLE_ART.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.T_REFERENCES_FOB_RFO.Add(Me)
					Me._ART_ID = value.ART_ID
				Else
					Me._ART_ID = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("T_ARTICLE_ART")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
